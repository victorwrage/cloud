package com.baibao.cloud.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.baibao.cloud.SynergyOrderItem;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "SYNERGY_ORDER_ITEM".
*/
public class SynergyOrderItemDao extends AbstractDao<SynergyOrderItem, Long> {

    public static final String TABLENAME = "SYNERGY_ORDER_ITEM";

    /**
     * Properties of entity SynergyOrderItem.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Ddh = new Property(1, String.class, "ddh", false, "DDH");
        public final static Property Qy = new Property(2, String.class, "qy", false, "QY");
        public final static Property Ddje = new Property(3, String.class, "ddje", false, "DDJE");
        public final static Property Jhzt = new Property(4, Integer.class, "jhzt", false, "JHZT");
    };


    public SynergyOrderItemDao(DaoConfig config) {
        super(config);
    }
    
    public SynergyOrderItemDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SYNERGY_ORDER_ITEM\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"DDH\" TEXT," + // 1: ddh
                "\"QY\" TEXT," + // 2: qy
                "\"DDJE\" TEXT," + // 3: ddje
                "\"JHZT\" INTEGER);"); // 4: jhzt
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SYNERGY_ORDER_ITEM\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, SynergyOrderItem entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String ddh = entity.getDdh();
        if (ddh != null) {
            stmt.bindString(2, ddh);
        }
 
        String qy = entity.getQy();
        if (qy != null) {
            stmt.bindString(3, qy);
        }
 
        String ddje = entity.getDdje();
        if (ddje != null) {
            stmt.bindString(4, ddje);
        }
 
        Integer jhzt = entity.getJhzt();
        if (jhzt != null) {
            stmt.bindLong(5, jhzt);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public SynergyOrderItem readEntity(Cursor cursor, int offset) {
        SynergyOrderItem entity = new SynergyOrderItem( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // ddh
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // qy
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // ddje
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4) // jhzt
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, SynergyOrderItem entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setDdh(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setQy(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setDdje(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setJhzt(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(SynergyOrderItem entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(SynergyOrderItem entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
