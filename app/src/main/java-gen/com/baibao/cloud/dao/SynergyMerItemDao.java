package com.baibao.cloud.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.baibao.cloud.SynergyMerItem;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "SYNERGY_MER_ITEM".
*/
public class SynergyMerItemDao extends AbstractDao<SynergyMerItem, Long> {

    public static final String TABLENAME = "SYNERGY_MER_ITEM";

    /**
     * Properties of entity SynergyMerItem.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Sku = new Property(1, String.class, "sku", false, "SKU");
        public final static Property Ddh = new Property(2, String.class, "ddh", false, "DDH");
        public final static Property Wpsl = new Property(3, String.class, "wpsl", false, "WPSL");
        public final static Property Address = new Property(4, String.class, "address", false, "ADDRESS");
        public final static Property Pcode = new Property(5, String.class, "pcode", false, "PCODE");
        public final static Property Unit = new Property(6, String.class, "unit", false, "UNIT");
        public final static Property Price = new Property(7, String.class, "price", false, "PRICE");
        public final static Property Name = new Property(8, String.class, "name", false, "NAME");
        public final static Property Number = new Property(9, String.class, "number", false, "NUMBER");
    };


    public SynergyMerItemDao(DaoConfig config) {
        super(config);
    }
    
    public SynergyMerItemDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SYNERGY_MER_ITEM\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"SKU\" TEXT," + // 1: sku
                "\"DDH\" TEXT," + // 2: ddh
                "\"WPSL\" TEXT," + // 3: wpsl
                "\"ADDRESS\" TEXT," + // 4: address
                "\"PCODE\" TEXT," + // 5: pcode
                "\"UNIT\" TEXT," + // 6: unit
                "\"PRICE\" TEXT," + // 7: price
                "\"NAME\" TEXT," + // 8: name
                "\"NUMBER\" TEXT);"); // 9: number
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SYNERGY_MER_ITEM\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, SynergyMerItem entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String sku = entity.getSku();
        if (sku != null) {
            stmt.bindString(2, sku);
        }
 
        String ddh = entity.getDdh();
        if (ddh != null) {
            stmt.bindString(3, ddh);
        }
 
        String wpsl = entity.getWpsl();
        if (wpsl != null) {
            stmt.bindString(4, wpsl);
        }
 
        String address = entity.getAddress();
        if (address != null) {
            stmt.bindString(5, address);
        }
 
        String pcode = entity.getPcode();
        if (pcode != null) {
            stmt.bindString(6, pcode);
        }
 
        String unit = entity.getUnit();
        if (unit != null) {
            stmt.bindString(7, unit);
        }
 
        String price = entity.getPrice();
        if (price != null) {
            stmt.bindString(8, price);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(9, name);
        }
 
        String number = entity.getNumber();
        if (number != null) {
            stmt.bindString(10, number);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public SynergyMerItem readEntity(Cursor cursor, int offset) {
        SynergyMerItem entity = new SynergyMerItem( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // sku
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // ddh
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // wpsl
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // address
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // pcode
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // unit
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // price
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // name
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9) // number
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, SynergyMerItem entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setSku(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setDdh(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setWpsl(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setAddress(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setPcode(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setUnit(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setPrice(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setName(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setNumber(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(SynergyMerItem entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(SynergyMerItem entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
